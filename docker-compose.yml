version: '3.5'
services:
  db:
    image: postgres:13
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  rabbitmq:
    image: rabbitmq:management
    ports:
    - 5672:5672
  flower:
    image: mher/flower
    ports:
    - 5555:5555
    command: ["flower", "--broker=amqp://rabbitmq:5672"]
    depends_on:
      - rabbitmq
    environment:
      - FLOWER_BROKER_API_URL=http://guest:guest@rabbitmq:15672/api/vhost
  newsletter_site:
    build:
      context: .
    command: sh -c "python3 manage.py wait_for_db && python3 manage.py migrate --noinput && python3 manage.py init_admin && python manage.py collectstatic --no-input --clear && gunicorn newsletter_site.wsgi:application --bind 0.0.0.0:8000"
    restart: "on-failure"
    expose:
      - 8000
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - CELERY_BROKER_URL=pyamqp://rabbitmq:5672
    depends_on:
      - db
      - rabbitmq
    image: expert-lamp_celery:latest
    volumes:
      - static_volume:/home/appuser/staticfiles
  celery:
    restart: always
    build:
      context: .
    command: sh -c "celery -A newsletter_site worker -l info"
    depends_on:
      - newsletter_site
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/postgres
      - CELERY_BROKER_URL=amqp://rabbitmq:5672
  nginx:
    build: ./nginx
    ports:
      - 1000:80
    depends_on:
      - newsletter_site
    restart: "on-failure"
    volumes:
      - static_volume:/home/appuser/staticfiles
volumes:
  postgres_data:
  static_volume:


# TODO: Configure volumes